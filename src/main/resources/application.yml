server:
  port: 8080
  servlet:
    context-path: /
    multipart:
      enabled: true
      max-file-size: 100MB
    encoding:
      charset: utf-8
      enabled: true

spring:
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher # swagger setting

  # H2
  datasource:
    driver-class-name: org.h2.Driver # org.h2.Driver, org.mariadb.jdbc.Driver
    url: jdbc:h2:tcp://localhost/~/test #jdbc:h2:tcp://localhost/~/test, jdbc:mariadb://IP:3306/portal?serverTimezone=Asia/Seoul
    username: sa
    password:

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect #org.hibernate.dialect.H2Dialect, org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        show_sql: true

#  security:
#    oauth2:
#      client:
#        provider:
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id
#
#        registration:
#          facebook:
#            client-id: # 발급 받은 client-id #
#            client-secret: # 발급 받은 client-secret #
#            scope: # 필요한 권한 #
#
#          google:
#            client-id: # 발급 받은 client-id #
#            client-secret: # 발급 받은 client-secret #
#            scope: # 필요한 권한 #
#
#          kakao:
#            client-id: # 발급 받은 client-id #
#            client-secret: # 발급 받은 client-secret #
#            scope: # 필요한 권한 #
#            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#            client-name: kakao
#            client-authentication-method: POST
#
#          naver:
#            client-id: # 발급 받은 client-id #
#            client-secret: # 발급 받은 client-secret #
#            scope: # 필요한 권한 #

jwt:
  # base64로 인코딩된 암호 키, HS512를 사용할 것이기 때문에, 512비트(64바이트) 이상이 되어야 합니다. 영숫자 조합으로 아무렇게나 길게 써주세요!
  secretKey: vitasoftvitasoftvitasoftvitasoftvitasoftvitasoftvitasoftvitasoftvitasoftvitasofvitasofvitasof

  access:
    expiration: 3600000 # 1시간(60분) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization

  refresh:
    expiration: 1209600000 #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> 하루) * 14(2주))
    header: Authorization-refresh